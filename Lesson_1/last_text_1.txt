1. Дано четырехзначное число (к примеру 5678). Вывести на экран в обратном порядке цифры, из которых это число состоит.

2. Вывести на экран таблицу умножения чисел A * B, где A и B пробегают значения от 1 до 9.

3. Вывести на экран равнобедренный треугольник высотой N == 5 (N можно будет изменять), состоящий из символов '*':

     *
    ***
   *****
  *******
 *********

4. Определите два целых числа a и N. Напишите программу, которая вычисляет a^N (а в степени N). Выведите результат на экран.

5. Определите два массива целых чисел X и Y длиной N == 5 (N можно будет изменять). Вычислите скалярное произведение X * Y,
а также вектор Z, элементами которого являются суммы соответствующих координат векторов X и Y. Выведите значение Z на экран
в виде строки:

Z = (z1, z2, z3, z4, z5)

6. Определите два массива целых чисел X и Y длиной N == 5 (N можно будет изменять). Выведите на экран значение
евклидова расстояния между двумя точками в N-мерном пространстве, координатами которых являются значения массивов X И Y.
Используйте функцию вычисления квадратного корня из неотрицательного числа sqrt() (объявленную в заголовочном файле <cmath>):

int a = sqrt(16);  // a будет равно 4

7. Определите целочисленную переменную N. Напишите программу, которая выводит на экран двоичное представление этого числа.
Например:

N == 5:  вывод: 101
N == 3:  вывод:  11
N == 30: вывод: 11110

8*. Определите целочисленную переменную N. Напишите программу, которая выводит на экран шестнадцатиричное представление этого числа.
В этом представлении 16 цифр: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F
При выводе также нужно приписывать строковый префикс "0x" перед полученным значением в шестнадцатиричной форме.
Например:

N == 5:  вывод: 0x5
N == 10: вывод: 0xA
N == 15: вывод: 0xF
N == 21: вывод: 0x15
N == 31: вывод: 0x1F
N == 128: вывод: 0x80
N == 215: вывод: 0xD7

9. В заголовочном файле <cmath> (или <math.h>) определена функция возведения в степень pow(). Например, вычислить 2 в степени 4 можно так:

int a = pow(2, 4);  // a будет равно 16

Пользуясь этой функцией, вычислите максимальное целое значение, которое может хранить переменная целого (int) типа со знаком на 8=битных платформах (т.е. таких, у которых 1 байт содержит 8 бит).

10*. Определите double переменную x. Пользуясь формулой Тейлора для математической функции "синус" (sine) 
(см. https://en.wikipedia.org/wiki/Taylor_series), напишите программу, которая вычисляет sin(x) с точностью до 2-го знака после запятой.

